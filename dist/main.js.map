{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEmB;;;;;;;;;;;;;;;ACfnB;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,EAAE;;AAEhD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,EAAE;AACpC;AACA,qCAAqC,EAAE;AACvC,kCAAkC,EAAE;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,EAAE;AAC3C;AACA;;;;;;;;;;;;;;;;;;ACnCA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;UC/FA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNA;AAC8D;AACb;AACV;;AAEvC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC,2DAAc;;AAElD;AACA;AACA,sBAAsB,2DAAU;AAChC,IAAI,8DAAY;AAChB;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA","sources":["webpack://todo/./src/addtask.js","webpack://todo/./src/listprojects.js","webpack://todo/./src/makeproject.js","webpack://todo/webpack/bootstrap","webpack://todo/webpack/runtime/define property getters","webpack://todo/webpack/runtime/hasOwnProperty shorthand","webpack://todo/webpack/runtime/make namespace object","webpack://todo/./src/index.js"],"sourcesContent":["function addTask(){\n\n    console.log(\"MAKE PROJECT WORKS\")\n\n    const taskHolder = {\n        title: '', \n        description: '', \n        duedate: '', \n        priority:'',\n        show: '',\n    };\n    \n    return taskHolder;\n}\n\nexport {  addTask }\n","function listProjects(x){\n    sidebar.innerHTML = '';\n    for (let i=0; i<x.length; i++){\n        //get sidebar div\n        const sidebar = document.getElementById('sidebar');\n\n        //make new project div\n        const projList = document.createElement('div');\n        projList.classList.add('project');\n        projList.setAttribute('id', `project${i}`);\n\n        //project title div\n        const projTitle = document.createElement('div');\n        projTitle.classList.add('titles');\n\n        //project number of items div\n        const projItems = document.createElement('div');\n        projItems.classList.add('items');\n        \n            // x[i].title = `Mr ${i}`;\n            // x[i].items = x[i].tasks.length;\n            // // x[i].tasks.push(`${i}`);\n            // x[i].tasks.push(`${i}`);\n\n        //title and items values\n        projTitle.textContent = 'ohoh';\n        projItems.textContent = 'ohoh';\n        \n        //append to project div\n        projList.appendChild(projTitle);\n        projList.appendChild(projItems);\n        \n        //append to sidebar\n        sidebar.appendChild(projList);\n        console.log(\"DISPLAY WORKS\" + `${i}`)\n    }\n}\n\nexport {  listProjects }","\n    let projectName = '';\n\nfunction addButtonClick(){\n\n    function popUp(){\n        //find popup div\n        const pop = document.querySelector('#popup');\n    \n        //make entry box\n        function getProjectInfo (){\n                let entryName ='';\n                //box\n                const entryBox = document.createElement('div');\n                \n                //set attributes\n                entryBox.classList.add('popupbox');\n                entryBox.setAttribute('id', 'popupbox');\n                \n                //append to popup div\n                pop.appendChild(entryBox);\n        \n                const entryLabel = document.createElement('div');\n                entryLabel.classList.add('entrylabel');\n                entryLabel.setAttribute('id', 'entrylabel');\n                entryLabel.textContent = 'Project Name:'\n                entryBox.appendChild(entryLabel);\n                \n                const entryInput = document.createElement('div');\n                entryInput.classList.add('entryinput');\n                entryInput.setAttribute('id', 'entryinput');\n                const entryField = document.createElement('input');\n                entryField.classList.add('entryfield');\n                entryField.setAttribute('id', 'entryfield');\n                entryInput.appendChild(entryField);\n                entryBox.appendChild(entryInput);\n                const entrySubmit = document.createElement('button');\n                entryBox.appendChild(entrySubmit);\n        \n                entrySubmit.addEventListener('click', getName)\n                \n                //grabs whatever is in entry field\n                function getName (){\n                    entryName = document.getElementById('entryfield')\n                    projectName = entryName.value; \n                    console.log(projectName);\n                    pop.innerHTML = '';\n                    pop.style.display = \"none\";\n                }\n                \n                //exit popup function\n                function exitEntry (){\n                    pop.innerHTML = '';\n                    pop.style.display = \"none\";\n                    document.removeEventListener('keydown', event);\n\n                }\n                //listener to escape or enter popup \n                document.addEventListener('keydown', function(event){\n                    if(event.key === \"Escape\"){\n                        exitEntry();\n                    } else if (event.key === \"Enter\"){\n                        getName();\n                    }\n                })\n                return entryName.value;\n        };\n    \n        const getProjectInfoFunc =  getProjectInfo();\n\n        getProjectInfoFunc;\n\n        pop.style.display = \"grid\";\n    \n    };\n    const runPop = popUp();\n    runPop;\n\n}\n\n\n//HOW DO I GET entryName OUT OF THE OTHER FUNCTION?!!!\n\nfunction addProject(){\n\n    console.log(\"MAKE PROJECT WORKS\")\n\n    const projectHolder = {\n        title: '', \n        items: '', \n        tasks: [],\n\n    };\n    \n    return projectHolder;\n}\n\nexport {  addProject, addButtonClick }","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//returns object to add to project array\nimport { addProject, addButtonClick } from './makeproject.js'; \nimport { listProjects } from './listprojects.js'; \nimport { addTask } from './addtask.js'; \n\n//holder for project name\n// const projectName = '';\n\n//holder for projects\nconst projectArray = [];\n\n//test connection\nconsole.log(\"IT'S STILL LIVE AGAIN NOW!!!\");\n\n//log initial array\nconsole.table(projectArray);\n\nconst addButton = document.getElementById('additem');\naddButton.addEventListener('click', addButtonClick);\n\nfunction runShowArray(){\n    console.table(projectArray);\n    projectArray.push(addProject());\n    listProjects(projectArray);\n    console.table(projectArray);\n\n}\n\n// runShowArray();\n\n//add project\n// projectArray.push(addProject());\n// projectArray.push(addProject());\n\n//log project with new object\n\n"],"names":[],"sourceRoot":""}